name: Python application

on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  # schedule: https://help.github.com/en/actions/automating-your-workflow-with-github-actions/events-that-trigger-workflows#scheduled-events-schedule
  schedule:
    - cron: '0 */4 * * *'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout Python Code
      uses: actions/checkout@v2

    - name: Set up R 
      uses: r-lib/actions/setup-r@v1
      with:
        r-version: '3.5.1'
    
    - name: git clone sports site
      run: |
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Action"
        git clone https://${GHTOKEN}@github.com/bryanwhiting/sports.git site
        ls -alF
        cd site
        date > runtime.txt
        git add runtime.txt
        git commit -am "Starting build"
        git push
        cd
      env:
        GHTOKEN: ${{ secrets.GHTOKEN }}
    
    # https://github.com/r-lib/actions/blob/master/examples/blogdown.yaml
    - name: Install pandoc and pandoc citeproc
      run: |
        brew install pandoc
        brew install pandoc-citeproc
    
    - name: Build R env
      run: |
        Rscript -e 'install.packages(c("install.load", "rmarkdown", "distill"))'
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --exclude=./scratch/
    - name: Test with black
      run: |
        pip install black
        black --check *.py
    - name: Test with pytest
      run: |
        pip install pytest
        pytest
#     - name: Data pull (main.py pull 2020 data)
#       run: |
#         python main.py pull
#     - name: Data Process (main.py proc)
#       run: |
#         python main.py proc
#     - name: Score and compile results (main.py results)
#       run: |
#         python main.py results
    - name: Build site (main.py rmd)
      run: |
        python main.py rmd
    - name: Push site
      run: |
        cd site
        git status
        git add .
        git commit -am "Scheduled build"
        git push
